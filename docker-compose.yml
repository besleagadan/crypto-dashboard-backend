version: "3.9"

services:
  web:
    container_name: crypto-dashboard-backend_web
    build: .
    entrypoint: [ "/entrypoint.sh" ]
    ports:
      - "8000:8000"
    volumes:
      - .:/app:cached # optimize for macOS; remove for production
    env_file:
      - .env
    depends_on:
      - redis
      - postgres
      - mongo

  postgres:
    container_name: crypto-dashboard-backend_postgres
    image: postgres:17-alpine
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  mongo:
    container_name: crypto-dashboard-backend_mongo
    image: mongo:6.0
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    command: [ "mongod", "--quiet" ]

  redis:
    container_name: crypto-dashboard-backend_redis
    image: redis:7
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  worker:
    container_name: crypto-dashboard-backend_worker
    build: .
    command: celery -A app.celery_worker.celery_app worker --loglevel=info
    volumes:
      - .:/app
    depends_on:
      - redis
      - postgres
      - mongo
    env_file:
      - .env

volumes:
  postgres_data:
  mongo_data:
  redis_data:
